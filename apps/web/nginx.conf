# Railway SSL Termination Configuration
# Railway terminates SSL at the edge, so we listen on port 80
# but check for X-Forwarded-Proto header to ensure HTTPS

server {
    listen 80;
    server_name turismocinematografico.com.br www.turismocinematografico.com.br _;

    root /usr/share/nginx/html;
    index index.html;
    
    # Redirecionar www para não-www (ou vice-versa, conforme preferência)
    # Se quiser redirecionar não-www para www, troque as condições abaixo
    # Por enquanto, aceita ambos sem redirecionamento

    # MIME types for images (including GIF)
    location ~* \.(gif|png|jpg|jpeg|svg|webp|ico)$ {
        try_files $uri =404;
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Cross-Origin-Embedder-Policy "unsafe-none";
        add_header Cross-Origin-Resource-Policy "same-origin";
        access_log off;
    }

    # Compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1000;
    gzip_types text/plain text/css text/xml text/javascript application/x-javascript application/xml+rss application/json application/javascript;

    # Force HTTPS if not already using it (Railway edge provides this)
    # Check if request came through HTTPS at Railway edge
    set $redirect_to_https 0;
    if ($http_x_forwarded_proto != 'https') {
        set $redirect_to_https 1;
    }
    
    # Only redirect if we're not on localhost/internal
    if ($host !~* ^localhost|127\.0\.0\.1|\.railway\.app$) {
        set $redirect_to_https "${redirect_to_https}1";
    }

    if ($redirect_to_https = 11) {
        return 301 https://$host$request_uri;
    }

    # Security headers - SSL/HTTPS enforced
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;
    add_header Content-Security-Policy "upgrade-insecure-requests; img-src 'self' data: https: blob:; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com data:" always;
    add_header Cross-Origin-Embedder-Policy "unsafe-none" always;
    add_header Cross-Origin-Resource-Policy "same-origin" always;

    location / {
        try_files $uri $uri/ /index.html;
    }

    location /api {
        proxy_pass http://api:3001;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_cache_bypass $http_upgrade;
    }
}

